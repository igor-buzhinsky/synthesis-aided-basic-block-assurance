INPUT DELAY_INPUT_SIGN:bool DELAY_UP:0..2 DELAY_DOWN:0..2
OUTPUT DELAY_OUTPUT_SIGN:bool

# S1 UP -- ok for delays in 0..2?
SPEC_SYNTHESIS G(!DELAY_INPUT_SIGN & X(DELAY_INPUT_SIGN) -> (X(DELAY_UP != 0) & !DELAY_OUTPUT_SIGN -> X(!DELAY_OUTPUT_SIGN)) & (X(DELAY_UP = 0) || X(DELAY_UP != 0) & DELAY_OUTPUT_SIGN -> X(DELAY_OUTPUT_SIGN)))

# S1 DOWN -- ok for delays in 0..2?
SPEC_SYNTHESIS G(DELAY_INPUT_SIGN & X(!DELAY_INPUT_SIGN) -> (X(DELAY_DOWN != 0) & DELAY_OUTPUT_SIGN -> X(DELAY_OUTPUT_SIGN)) & (X(DELAY_DOWN = 0) || X(DELAY_DOWN != 0) & !DELAY_OUTPUT_SIGN -> X(!DELAY_OUTPUT_SIGN)))

#S2 UP -- updated on step 3 -- modified on stage 11  -- modified on stage 12
SPEC_SYNTHESIS G(!DELAY_INPUT_SIGN & !DELAY_OUTPUT_SIGN & X(DELAY_UP = 0 & DELAY_INPUT_SIGN & X(DELAY_INPUT_SIGN)) -> X(DELAY_OUTPUT_SIGN & X(DELAY_OUTPUT_SIGN)))

SPEC_SYNTHESIS G(!DELAY_INPUT_SIGN & !DELAY_OUTPUT_SIGN & X(DELAY_UP = 1 & DELAY_INPUT_SIGN & X(DELAY_INPUT_SIGN)) -> X(!DELAY_OUTPUT_SIGN & X(DELAY_OUTPUT_SIGN)))

SPEC_SYNTHESIS G(!DELAY_INPUT_SIGN & !DELAY_OUTPUT_SIGN & X(DELAY_UP = 2 & DELAY_INPUT_SIGN & X(DELAY_INPUT_SIGN & X(DELAY_INPUT_SIGN))) -> X(!DELAY_OUTPUT_SIGN & X(!DELAY_OUTPUT_SIGN & X(DELAY_OUTPUT_SIGN))))

#S2 DOWN -- updated on step 3 -- modified on stage 11  -- modified on stage 12
SPEC_SYNTHESIS G(DELAY_INPUT_SIGN & DELAY_OUTPUT_SIGN & X(DELAY_DOWN = 0 & !DELAY_INPUT_SIGN & X(!DELAY_INPUT_SIGN)) -> X(!DELAY_OUTPUT_SIGN & X(!DELAY_OUTPUT_SIGN)))

SPEC_SYNTHESIS G(DELAY_INPUT_SIGN & DELAY_OUTPUT_SIGN & X(DELAY_DOWN = 1 & !DELAY_INPUT_SIGN & X(!DELAY_INPUT_SIGN)) -> X(DELAY_OUTPUT_SIGN & X(!DELAY_OUTPUT_SIGN)))

SPEC_SYNTHESIS G(DELAY_INPUT_SIGN & DELAY_OUTPUT_SIGN & X(DELAY_DOWN = 2 & !DELAY_INPUT_SIGN & X(!DELAY_INPUT_SIGN & X(!DELAY_INPUT_SIGN))) -> X(DELAY_OUTPUT_SIGN & X(DELAY_OUTPUT_SIGN & X(!DELAY_OUTPUT_SIGN))))

# Extra spec: FALSE initial memory -- updated on step 1
SPEC_SYNTHESIS DELAY_UP != 0 -> !DELAY_OUTPUT_SIGN
SPEC_SYNTHESIS !DELAY_INPUT_SIGN -> X(DELAY_UP != 0 -> !DELAY_OUTPUT_SIGN)

# Extra spec: initial step version of S1 UP -- ok for delays in 0..2?
SPEC_SYNTHESIS DELAY_INPUT_SIGN -> (DELAY_UP != 0 -> !DELAY_OUTPUT_SIGN) & (DELAY_UP = 0 -> DELAY_OUTPUT_SIGN)

# Extra spec: initial step version of S2 UP -- updated on step 4
SPEC_SYNTHESIS DELAY_UP = 1 & DELAY_INPUT_SIGN & X(DELAY_UP = 1 & DELAY_INPUT_SIGN) -> !DELAY_OUTPUT_SIGN & X(DELAY_OUTPUT_SIGN)

SPEC_SYNTHESIS DELAY_UP = 2 & DELAY_INPUT_SIGN & X(DELAY_UP = 2 & DELAY_INPUT_SIGN & X(DELAY_UP = 2 & DELAY_INPUT_SIGN)) -> !DELAY_OUTPUT_SIGN & X(!DELAY_OUTPUT_SIGN & X(DELAY_OUTPUT_SIGN))

# Extra spec: response for a long FALSE sequence -- updated on step 2 -- modified on stage 11
SPEC_SYNTHESIS G(!DELAY_INPUT_SIGN & DELAY_DOWN = 1 -> X(!DELAY_INPUT_SIGN & DELAY_DOWN = 1 -> !DELAY_OUTPUT_SIGN))
SPEC_SYNTHESIS G(!DELAY_INPUT_SIGN & DELAY_DOWN = 2 -> X(!DELAY_INPUT_SIGN & DELAY_DOWN = 2 -> X(!DELAY_INPUT_SIGN & DELAY_DOWN = 2 -> !DELAY_OUTPUT_SIGN)))

# Extra spec: response for a long TRUE sequence-- updated on step 2 -- modified on stage 11
SPEC_SYNTHESIS G(DELAY_INPUT_SIGN & DELAY_UP = 1 -> X(DELAY_INPUT_SIGN & DELAY_UP = 1 -> DELAY_OUTPUT_SIGN))
SPEC_SYNTHESIS G(DELAY_INPUT_SIGN & DELAY_UP = 2 -> X(DELAY_INPUT_SIGN & DELAY_UP = 2 -> X(DELAY_INPUT_SIGN & DELAY_UP = 2 -> DELAY_OUTPUT_SIGN)))

# Extra spec: ignoring TRUE pulses in the beginning
SPEC_SYNTHESIS DELAY_UP != 0 & DELAY_INPUT_SIGN -> !DELAY_OUTPUT_SIGN & X(DELAY_UP != 0 & !DELAY_INPUT_SIGN -> !DELAY_OUTPUT_SIGN & X(DELAY_UP != 0 -> !DELAY_OUTPUT_SIGN))
SPEC_SYNTHESIS DELAY_UP = 2 & DELAY_INPUT_SIGN -> !DELAY_OUTPUT_SIGN & X(DELAY_UP = 2 & DELAY_INPUT_SIGN -> !DELAY_OUTPUT_SIGN & X(DELAY_UP = 2 & !DELAY_INPUT_SIGN -> X(DELAY_UP = 2 -> !DELAY_OUTPUT_SIGN)))

# Extra spec: ignoring TRUE pulses
SPEC_SYNTHESIS G(!DELAY_INPUT_SIGN & !DELAY_OUTPUT_SIGN -> X(DELAY_UP != 0 & DELAY_INPUT_SIGN -> !DELAY_OUTPUT_SIGN & X(DELAY_UP != 0 & !DELAY_INPUT_SIGN -> !DELAY_OUTPUT_SIGN & X(DELAY_UP != 0 -> !DELAY_OUTPUT_SIGN))))
SPEC_SYNTHESIS G(!DELAY_INPUT_SIGN & !DELAY_OUTPUT_SIGN -> X(DELAY_UP = 2 & DELAY_INPUT_SIGN -> !DELAY_OUTPUT_SIGN & X(DELAY_UP = 2 & DELAY_INPUT_SIGN -> !DELAY_OUTPUT_SIGN & X(DELAY_UP = 2 & !DELAY_INPUT_SIGN -> X(DELAY_UP = 2 -> !DELAY_OUTPUT_SIGN)))))

# Extra spec: ignoring FALSE pulses
SPEC_SYNTHESIS G(DELAY_INPUT_SIGN & DELAY_OUTPUT_SIGN -> X(DELAY_DOWN != 0 & !DELAY_INPUT_SIGN -> DELAY_OUTPUT_SIGN & X(DELAY_DOWN != 0 & DELAY_INPUT_SIGN -> DELAY_OUTPUT_SIGN & X(DELAY_DOWN != 0 -> DELAY_OUTPUT_SIGN))))
SPEC_SYNTHESIS G(DELAY_INPUT_SIGN & DELAY_OUTPUT_SIGN -> X(DELAY_DOWN = 2 & !DELAY_INPUT_SIGN -> DELAY_OUTPUT_SIGN & X(DELAY_DOWN = 2 & !DELAY_INPUT_SIGN -> DELAY_OUTPUT_SIGN & X(DELAY_DOWN = 2 & DELAY_INPUT_SIGN -> X(DELAY_DOWN = 2 -> DELAY_OUTPUT_SIGN)))))

# Extra spec: no spurious TRUE
SPEC_SYNTHESIS W(!DELAY_OUTPUT_SIGN, DELAY_INPUT_SIGN)

# Extra spec: specific for delays not greater than 2
SPEC_SYNTHESIS G(DELAY_INPUT_SIGN & DELAY_OUTPUT_SIGN -> X(DELAY_INPUT_SIGN & DELAY_OUTPUT_SIGN -> X(DELAY_INPUT_SIGN -> DELAY_OUTPUT_SIGN)))
SPEC_SYNTHESIS G(!DELAY_INPUT_SIGN & !DELAY_OUTPUT_SIGN -> X(!DELAY_INPUT_SIGN & !DELAY_OUTPUT_SIGN -> X(!DELAY_INPUT_SIGN -> !DELAY_OUTPUT_SIGN)))

# Extra spec: pulse start conversion
SPEC_SYNTHESIS G(!DELAY_INPUT_SIGN -> X(DELAY_INPUT_SIGN -> (DELAY_UP = 0 -> DELAY_OUTPUT_SIGN) & (DELAY_UP = 1 -> X(DELAY_INPUT_SIGN -> DELAY_OUTPUT_SIGN)) & (DELAY_UP = 2 -> X(DELAY_INPUT_SIGN -> X(DELAY_INPUT_SIGN -> DELAY_OUTPUT_SIGN)))))
SPEC_SYNTHESIS G(DELAY_INPUT_SIGN -> X(!DELAY_INPUT_SIGN -> (DELAY_DOWN = 0 -> !DELAY_OUTPUT_SIGN) & (DELAY_DOWN = 1 -> X(!DELAY_INPUT_SIGN -> !DELAY_OUTPUT_SIGN)) & (DELAY_DOWN = 2 -> X(!DELAY_INPUT_SIGN -> X(!DELAY_INPUT_SIGN -> !DELAY_OUTPUT_SIGN)))))

# Extra spec: pulse start conversion (more precise)
SPEC_SYNTHESIS G(!DELAY_INPUT_SIGN & !DELAY_OUTPUT_SIGN -> X(DELAY_INPUT_SIGN & !DELAY_OUTPUT_SIGN & DELAY_UP = 1 -> X(DELAY_INPUT_SIGN & DELAY_OUTPUT_SIGN -> X((DELAY_INPUT_SIGN || DELAY_DOWN != 0) -> DELAY_OUTPUT_SIGN))))
SPEC_SYNTHESIS G(DELAY_INPUT_SIGN & DELAY_OUTPUT_SIGN -> X(!DELAY_INPUT_SIGN & DELAY_OUTPUT_SIGN & DELAY_DOWN = 1 -> X(!DELAY_INPUT_SIGN & !DELAY_OUTPUT_SIGN -> X((!DELAY_INPUT_SIGN || DELAY_UP != 0) -> !DELAY_OUTPUT_SIGN))))

SPEC_SYNTHESIS G(!DELAY_INPUT_SIGN & !DELAY_OUTPUT_SIGN -> X(DELAY_INPUT_SIGN & !DELAY_OUTPUT_SIGN & DELAY_UP = 2 -> X(DELAY_INPUT_SIGN & !DELAY_OUTPUT_SIGN -> X(DELAY_INPUT_SIGN & DELAY_OUTPUT_SIGN -> X((DELAY_INPUT_SIGN || DELAY_DOWN != 0) -> DELAY_OUTPUT_SIGN)))))
SPEC_SYNTHESIS G(DELAY_INPUT_SIGN & DELAY_OUTPUT_SIGN -> X(!DELAY_INPUT_SIGN & DELAY_OUTPUT_SIGN & DELAY_DOWN = 2 -> X(!DELAY_INPUT_SIGN & DELAY_OUTPUT_SIGN -> X(!DELAY_INPUT_SIGN & !DELAY_OUTPUT_SIGN -> X((!DELAY_INPUT_SIGN || DELAY_UP != 0) -> !DELAY_OUTPUT_SIGN)))))

# Extra spec: pulse ignoring (more precise)
SPEC_SYNTHESIS G(!DELAY_INPUT_SIGN & !DELAY_OUTPUT_SIGN -> X(DELAY_INPUT_SIGN & !DELAY_OUTPUT_SIGN & DELAY_UP != 0 -> X(!DELAY_INPUT_SIGN & !DELAY_OUTPUT_SIGN -> X(!DELAY_INPUT_SIGN -> !DELAY_OUTPUT_SIGN))))
SPEC_SYNTHESIS G(DELAY_INPUT_SIGN & DELAY_OUTPUT_SIGN -> X(!DELAY_INPUT_SIGN & DELAY_OUTPUT_SIGN & DELAY_DOWN != 0 -> X(DELAY_INPUT_SIGN & DELAY_OUTPUT_SIGN -> X(DELAY_INPUT_SIGN -> DELAY_OUTPUT_SIGN))))

SPEC_SYNTHESIS G(!DELAY_INPUT_SIGN & !DELAY_OUTPUT_SIGN & X(DELAY_INPUT_SIGN & !DELAY_OUTPUT_SIGN & DELAY_UP = 2 & X(DELAY_INPUT_SIGN & !DELAY_OUTPUT_SIGN & X(!DELAY_INPUT_SIGN & !DELAY_OUTPUT_SIGN & X(!DELAY_INPUT_SIGN)))) -> X X X X !DELAY_OUTPUT_SIGN)
SPEC_SYNTHESIS G(DELAY_INPUT_SIGN & DELAY_OUTPUT_SIGN & X(!DELAY_INPUT_SIGN & DELAY_OUTPUT_SIGN & DELAY_DOWN = 2 & X(!DELAY_INPUT_SIGN & DELAY_OUTPUT_SIGN & X(DELAY_INPUT_SIGN & DELAY_OUTPUT_SIGN & X(DELAY_INPUT_SIGN)))) -> X X X X DELAY_OUTPUT_SIGN)

SPEC_SYNTHESIS DELAY_INPUT_SIGN & DELAY_UP = 1 -> X(DELAY_INPUT_SIGN -> DELAY_OUTPUT_SIGN & X(DELAY_INPUT_SIGN -> DELAY_OUTPUT_SIGN))
SPEC_SYNTHESIS DELAY_INPUT_SIGN & DELAY_UP = 2 -> X(DELAY_INPUT_SIGN -> !DELAY_OUTPUT_SIGN & X(DELAY_INPUT_SIGN -> DELAY_OUTPUT_SIGN & X(DELAY_INPUT_SIGN -> DELAY_OUTPUT_SIGN)))

SPEC_SYNTHESIS DELAY_INPUT_SIGN & DELAY_UP != 0 -> X(!DELAY_INPUT_SIGN -> !DELAY_OUTPUT_SIGN & X(!DELAY_INPUT_SIGN -> !DELAY_OUTPUT_SIGN))
SPEC_SYNTHESIS DELAY_INPUT_SIGN & DELAY_UP = 0 -> X(DELAY_INPUT_SIGN -> DELAY_OUTPUT_SIGN)