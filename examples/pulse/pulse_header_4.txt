INPUT PULSE_INPUT_SIGN:bool PULSE_LENGTH:0..3 PULSE_MODE:0..3
OUTPUT PULSE_OUTPUT_SIGN:bool PULSE_REMAINING_TIME:0..3

SPEC_SYNTHESIS PULSE_INPUT_SIGN <-> PULSE_OUTPUT_SIGN
SPEC_SYNTHESIS !PULSE_INPUT_SIGN -> PULSE_REMAINING_TIME = 0
SPEC_SYNTHESIS PULSE_INPUT_SIGN & (PULSE_MODE = 0 || PULSE_LENGTH = 0) -> PULSE_REMAINING_TIME = 0
SPEC_SYNTHESIS PULSE_INPUT_SIGN & PULSE_MODE != 0 & PULSE_LENGTH = 1 -> PULSE_REMAINING_TIME = 1
SPEC_SYNTHESIS PULSE_INPUT_SIGN & PULSE_MODE != 0 & PULSE_LENGTH = 2 -> PULSE_REMAINING_TIME = 2
SPEC_SYNTHESIS PULSE_INPUT_SIGN & PULSE_MODE != 0 & PULSE_LENGTH = 3 -> PULSE_REMAINING_TIME = 3

# Mode 0: just 1-step pulses

SPEC_SYNTHESIS G(X(PULSE_MODE = 0) & !PULSE_INPUT_SIGN & X(PULSE_INPUT_SIGN) -> X(PULSE_OUTPUT_SIGN))
SPEC_SYNTHESIS G(X(PULSE_MODE = 0) & !(!PULSE_INPUT_SIGN & X(PULSE_INPUT_SIGN)) -> X(!PULSE_OUTPUT_SIGN))
SPEC_SYNTHESIS G(PULSE_MODE = 0 -> PULSE_REMAINING_TIME = 0)

# Mode 1: each new pulse during an existing one sets the remaining pulse length to the maximum one

SPEC_SYNTHESIS G(X(PULSE_MODE = 1 & PULSE_LENGTH = 0) & !PULSE_INPUT_SIGN & X(PULSE_INPUT_SIGN) -> X(PULSE_OUTPUT_SIGN & PULSE_REMAINING_TIME = 0))
SPEC_SYNTHESIS G(X(PULSE_MODE = 1 & PULSE_LENGTH = 1) & !PULSE_INPUT_SIGN & X(PULSE_INPUT_SIGN) -> X(PULSE_REMAINING_TIME = 1))
SPEC_SYNTHESIS G(X(PULSE_MODE = 1 & PULSE_LENGTH = 2) & !PULSE_INPUT_SIGN & X(PULSE_INPUT_SIGN) -> X(PULSE_REMAINING_TIME = 2))
SPEC_SYNTHESIS G(X(PULSE_MODE = 1 & PULSE_LENGTH = 3) & !PULSE_INPUT_SIGN & X(PULSE_INPUT_SIGN) -> X(PULSE_REMAINING_TIME = 3))

SPEC_SYNTHESIS G(X(PULSE_MODE = 1) & !(!PULSE_INPUT_SIGN & X(PULSE_INPUT_SIGN)) & PULSE_REMAINING_TIME = 3 -> X(PULSE_REMAINING_TIME = 2))
SPEC_SYNTHESIS G(X(PULSE_MODE = 1) & !(!PULSE_INPUT_SIGN & X(PULSE_INPUT_SIGN)) & PULSE_REMAINING_TIME = 2 -> X(PULSE_REMAINING_TIME = 1))
SPEC_SYNTHESIS G(X(PULSE_MODE = 1) & !(!PULSE_INPUT_SIGN & X(PULSE_INPUT_SIGN)) & PULSE_REMAINING_TIME = 1 -> X(!PULSE_OUTPUT_SIGN & PULSE_REMAINING_TIME = 0))
SPEC_SYNTHESIS G(X(PULSE_MODE = 1) & !(!PULSE_INPUT_SIGN & X(PULSE_INPUT_SIGN)) & PULSE_REMAINING_TIME = 0 -> X(!PULSE_OUTPUT_SIGN & PULSE_REMAINING_TIME = 0))

SPEC_SYNTHESIS G(PULSE_MODE = 1 & PULSE_REMAINING_TIME != 0 -> PULSE_OUTPUT_SIGN)

# Mode 2: each new pulse during an existing one is ignored

SPEC_SYNTHESIS G(X(PULSE_MODE = 2 & PULSE_LENGTH = 0) & PULSE_REMAINING_TIME = 0 & !PULSE_INPUT_SIGN & X(PULSE_INPUT_SIGN) -> X(PULSE_OUTPUT_SIGN & PULSE_REMAINING_TIME = 0))
SPEC_SYNTHESIS G(X(PULSE_MODE = 2 & PULSE_LENGTH = 1) & PULSE_REMAINING_TIME = 0 & !PULSE_INPUT_SIGN & X(PULSE_INPUT_SIGN) -> X(PULSE_REMAINING_TIME = 1))
SPEC_SYNTHESIS G(X(PULSE_MODE = 2 & PULSE_LENGTH = 2) & PULSE_REMAINING_TIME = 0 & !PULSE_INPUT_SIGN & X(PULSE_INPUT_SIGN) -> X(PULSE_REMAINING_TIME = 2))
SPEC_SYNTHESIS G(X(PULSE_MODE = 2 & PULSE_LENGTH = 3) & PULSE_REMAINING_TIME = 0 & !PULSE_INPUT_SIGN & X(PULSE_INPUT_SIGN) -> X(PULSE_REMAINING_TIME = 3))

SPEC_SYNTHESIS G(X(PULSE_MODE = 2) & PULSE_REMAINING_TIME = 3 -> X(PULSE_REMAINING_TIME = 2))
SPEC_SYNTHESIS G(X(PULSE_MODE = 2) & PULSE_REMAINING_TIME = 2 -> X(PULSE_REMAINING_TIME = 1))
SPEC_SYNTHESIS G(X(PULSE_MODE = 2) & PULSE_REMAINING_TIME = 1 -> X(!PULSE_OUTPUT_SIGN & PULSE_REMAINING_TIME = 0))
SPEC_SYNTHESIS G(X(PULSE_MODE = 2) & !(!PULSE_INPUT_SIGN & X(PULSE_INPUT_SIGN)) & PULSE_REMAINING_TIME = 0 -> X(!PULSE_OUTPUT_SIGN & PULSE_REMAINING_TIME = 0))

SPEC_SYNTHESIS G(PULSE_MODE = 2 & PULSE_REMAINING_TIME != 0 -> PULSE_OUTPUT_SIGN)

# Mode 3: each change to FALSE during a pulse cancels this pulse;
# "The output acts like an output from the combination of an AND module and a mode-1 pulse module."

SPEC_SYNTHESIS G(X(PULSE_MODE = 3 & PULSE_LENGTH = 0) & !PULSE_INPUT_SIGN & X(PULSE_INPUT_SIGN) -> X(PULSE_OUTPUT_SIGN & PULSE_REMAINING_TIME = 0))
SPEC_SYNTHESIS G(X(PULSE_MODE = 3 & PULSE_LENGTH = 1) & !PULSE_INPUT_SIGN & X(PULSE_INPUT_SIGN) -> X(PULSE_REMAINING_TIME = 1))
SPEC_SYNTHESIS G(X(PULSE_MODE = 3 & PULSE_LENGTH = 2) & !PULSE_INPUT_SIGN & X(PULSE_INPUT_SIGN) -> X(PULSE_REMAINING_TIME = 2))
SPEC_SYNTHESIS G(X(PULSE_MODE = 3 & PULSE_LENGTH = 3) & !PULSE_INPUT_SIGN & X(PULSE_INPUT_SIGN) -> X(PULSE_REMAINING_TIME = 3))

SPEC_SYNTHESIS G(X(PULSE_MODE = 3) & !(!PULSE_INPUT_SIGN & X(PULSE_INPUT_SIGN)) & !(!PULSE_OUTPUT_SIGN & X(!PULSE_OUTPUT_SIGN)) & PULSE_REMAINING_TIME = 3 -> X(PULSE_REMAINING_TIME = 2))
SPEC_SYNTHESIS G(X(PULSE_MODE = 3) & !(!PULSE_INPUT_SIGN & X(PULSE_INPUT_SIGN)) & (!PULSE_OUTPUT_SIGN & X(!PULSE_OUTPUT_SIGN)) & PULSE_REMAINING_TIME = 3 -> X(PULSE_REMAINING_TIME = 0))

SPEC_SYNTHESIS G(X(PULSE_MODE = 3) & !(!PULSE_INPUT_SIGN & X(PULSE_INPUT_SIGN)) & !(!PULSE_OUTPUT_SIGN & X(!PULSE_OUTPUT_SIGN)) & PULSE_REMAINING_TIME = 2 -> X(PULSE_REMAINING_TIME = 1))
SPEC_SYNTHESIS G(X(PULSE_MODE = 3) & !(!PULSE_INPUT_SIGN & X(PULSE_INPUT_SIGN)) & (!PULSE_OUTPUT_SIGN & X(!PULSE_OUTPUT_SIGN)) & PULSE_REMAINING_TIME = 2 -> X(PULSE_REMAINING_TIME = 0))

SPEC_SYNTHESIS G(X(PULSE_MODE = 3) & !(!PULSE_INPUT_SIGN & X(PULSE_INPUT_SIGN)) & PULSE_REMAINING_TIME = 1 -> X(!PULSE_OUTPUT_SIGN & PULSE_REMAINING_TIME = 0))
SPEC_SYNTHESIS G(X(PULSE_MODE = 3) & !(!PULSE_INPUT_SIGN & X(PULSE_INPUT_SIGN)) & PULSE_REMAINING_TIME = 0 -> X(!PULSE_OUTPUT_SIGN & PULSE_REMAINING_TIME = 0))

SPEC_SYNTHESIS G(PULSE_MODE = 3 & PULSE_REMAINING_TIME != 0 & PULSE_INPUT_SIGN -> PULSE_OUTPUT_SIGN)
SPEC_SYNTHESIS G(PULSE_MODE = 3 & !PULSE_INPUT_SIGN -> !PULSE_OUTPUT_SIGN)
